openapi: "3.0.3"
info:
  title: "ion-classcode API"
  description: "ion-classcode API"
  version: "1.0.0"
paths:
  /api/auth/callback:
    get:
      summary: "GET api/auth/callback"
      operationId: "callback"
      parameters:
        - name: "code"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "state"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
  /api/auth/logout:
    post:
      summary: "POST api/auth/logout"
      operationId: "logout"
      responses:
        "200":
          description: "OK"
  /api/auth/register:
    get:
      summary: "GET api/auth/register"
      operationId: "getRegisterInfo"
      responses:
        "200":
          description: "OK"
  /api/auth/register/student:
    post:
      summary: "POST api/auth/register/student"
      operationId: "createStudent"
      responses:
        "200":
          description: "OK"
  /api/auth/register/student/resend:
    post:
      summary: "POST api/auth/register/student/resend"
      operationId: "authResendEmailPath"
      responses:
        "200":
          description: "OK"
  /api/auth/register/student/verify:
    post:
      summary: "POST api/auth/register/student/verify"
      operationId: "authRegisterVerifyStudent"
      responses:
        "200":
          description: "OK"
  /api/auth/register/teacher:
    post:
      summary: "POST api/auth/register/teacher"
      operationId: "registerTeacher"
      responses:
        "200":
          description: "OK"
  /api/auth/state:
    get:
      summary: "GET api/auth/state"
      operationId: "authState"
      responses:
        "200":
          description: "OK"
  /api/auth/status:
    get:
      summary: "GET api/auth/status"
      operationId: "getStatus"
      responses:
        "200":
          description: "OK"
  /api/auth/student:
    get:
      summary: "GET api/auth/student"
      operationId: "authStudent"
      responses:
        "200":
          description: "OK"
  /api/auth/teacher:
    get:
      summary: "GET api/auth/teacher"
      operationId: "authTeacher"
      responses:
        "200":
          description: "OK"
  /api/courses:
    post:
      summary: "POST api/courses"
      operationId: "createCourse"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}:
    get:
      summary: "GET api/courses/{courseId}"
      operationId: "getCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
    put:
      summary: "PUT api/courses/{courseId}"
      operationId: "archiveCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/create:
    post:
      summary: "POST api/courses/{courseId}/classrooms/create"
      operationId: "createClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}"
      operationId: "getClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/archive:
    put:
      summary: "PUT api/courses/{courseId}/classrooms/{classroomId}/archive"
      operationId: "archiveClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/create:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/create"
      operationId: "createDelivery"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}"
      operationId: "getDeliveryInfo"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "deliveryId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
    delete:
      summary: "DELETE api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}"
      operationId: "deleteDelivery"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "deliveryId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}/edit:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}/edit"
      operationId: "editDelivery"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "deliveryId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}/sync:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/deliveries/{deliveryId}/sync"
      operationId: "syncDelivery"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "deliveryId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/join:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/join"
      operationId: "joinTeam"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/copy:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/copy"
      operationId: "localCopy"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/edit:
    put:
      summary: "PUT api/courses/{courseId}/classrooms/{classroomId}/edit"
      operationId: "editClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/sync:
    put:
      summary: "PUT api/courses/{courseId}/classrooms/{classroomId}/sync"
      operationId: "syncClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/leave:
    put:
      summary: "PUT api/courses/{courseId}/leave"
      operationId: "leaveCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/credits:
    get:
      summary: "GET api/credits"
      operationId: "credits"
      responses:
        "200":
          description: "OK"
  /api/home:
    get:
      summary: "GET api/home"
      operationId: "home"
      responses:
        "200":
          description: "OK"
  /api/invite/{inviteLink}:
    post:
      summary: "POST api/invite/{inviteLink}"
      operationId: "inviteLink"
      parameters:
        - name: "inviteLink"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
  /api/menu:
    get:
      summary: "GET api/menu"
      operationId: "menu"
      responses:
        "200":
          description: "OK"
  /api/orgs:
    get:
      summary: "GET api/orgs"
      operationId: "getTeacherOrgs"
      responses:
        "200":
          description: "OK"
  /api/teachers:
    get:
      summary: "GET api/teachers"
      operationId: "teachersApproval"
      responses:
        "200":
          description: "OK"
    post:
      summary: "POST api/teachers"
      operationId: "teacherApproved"
      responses:
        "200":
          description: "OK"
  /api/auth/callback/mobile:
    get:
      summary: "GET api/auth/callback/mobile"
      operationId: "callback"
      parameters:
        - name: "code"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "state"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/create:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/create"
      operationId: "createAssignment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}"
      operationId: "getAssigmentInfo"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/delete:
    delete:
      summary: "DELETE api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/delete"
      operationId: "deleteAssignment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams"
      operationId: "getTeamsInfoByAssignment"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}"
      operationId: "getTeamInfo"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/exit:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/exit"
      operationId: "exitTeam"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/feedback:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/feedback"
      operationId: "postFeedback"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/requests:
    get:
      summary: "GET api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/requests"
      operationId: "teamRequests"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/requests/{requestId}:
    post:
      summary: "POST api/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/requests/{requestId}"
      operationId: "changeStatusRequest"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "requestId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/mobile/auth:
    get:
      summary: "GET api/mobile/auth"
      operationId: "auth"
      parameters:
        - name: "challengeMethod"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "challenge"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
  /api/mobile/courses/{courseId}:
    get:
      summary: "GET api/mobile/courses/{courseId}"
      operationId: "getCourse"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/mobile/courses/{courseId}/classrooms/{classroomId}:
    get:
      summary: "GET api/mobile/courses/{courseId}/classrooms/{classroomId}"
      operationId: "getClassroom"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/mobile/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}:
    get:
      summary: "GET api/mobile/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}"
      operationId: "getAssigmentInfo"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/mobile/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/create:
    post:
      summary: "POST api/mobile/courses/{courseId}/classrooms/{classroomId}/assignments/{assignmentId}/teams/{teamId}/create"
      operationId: "updateTeamState"
      parameters:
        - name: "courseId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "classroomId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "assignmentId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
        - name: "teamId"
          in: "path"
          required: true
          schema:
            type: "number"
            format: "int32"
      responses:
        "200":
          description: "OK"
  /api/mobile/credits:
    get:
      summary: "GET api/mobile/credits"
      operationId: "credits"
      responses:
        "200":
          description: "OK"
  /api/mobile/home:
    get:
      summary: "GET api/mobile/home"
      operationId: "home"
      responses:
        "200":
          description: "OK"
  /api/mobile/menu:
    get:
      summary: "GET api/mobile/menu"
      operationId: "menu"
      responses:
        "200":
          description: "OK"
  /api/mobile/token:
    post:
      summary: "POST api/mobile/token"
      operationId: "getAccessToken"
      responses:
        "200":
          description: "OK"